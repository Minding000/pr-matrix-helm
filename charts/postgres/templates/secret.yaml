{{ if not .Values.user.password.secret_name -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
type: Opaque
data:
  {{- /* Retrieve existing secret */}}
  {{- $secret := (lookup "v1" "Secret" .Release.Namespace (include "postgres.fullname" .)) | default dict }}
  {{- /* Set $pgpassword to existing data or generate a random password */}}
  {{- $pgpassword := (get (get $secret "data" | default dict) .Values.user.password.secret_key) | default (randAlphaNum 32 | b64enc) }}

  {{ .Values.user.password.secret_key }}: {{ $pgpassword | quote }}
{{- end }}
